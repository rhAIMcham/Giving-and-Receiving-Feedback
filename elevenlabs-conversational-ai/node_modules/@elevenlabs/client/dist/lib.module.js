import{Room as e,RoomEvent as n,ConnectionState as t,Track as o,createLocalAudioTrack as r}from"livekit-client";function i(){return i=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)({}).hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},i.apply(null,arguments)}function a(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,s(e,n)}function s(e,n){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},s(e,n)}function u(e,n){try{var t=e()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}var c=new Uint8Array(0),l=/*#__PURE__*/function(){function e(e,n){var t=this,o=this,r=this;this.options=void 0,this.connection=void 0,this.lastInterruptTimestamp=0,this.mode="listening",this.status="connecting",this.volume=1,this.currentEventId=1,this.lastFeedbackEventId=0,this.canSendFeedback=!1,this.endSessionWithDetails=function(e){try{return"connected"!==o.status&&"connecting"!==o.status?Promise.resolve():(o.updateStatus("disconnecting"),Promise.resolve(o.handleEndSession()).then(function(){o.updateStatus("disconnected"),o.options.onDisconnect&&o.options.onDisconnect(e)}))}catch(e){return Promise.reject(e)}},this.onMessage=function(e){try{switch(e.type){case"interruption":return r.handleInterruption(e),Promise.resolve();case"agent_response":return r.handleAgentResponse(e),Promise.resolve();case"user_transcript":return r.handleUserTranscript(e),Promise.resolve();case"internal_tentative_agent_response":return r.handleTentativeAgentResponse(e),Promise.resolve();case"client_tool_call":var n=u(function(){return Promise.resolve(r.handleClientToolCall(e)).then(function(){})},function(n){r.onError("Unexpected error in client tool call handling: "+(n instanceof Error?n.message:String(n)),{clientToolName:e.client_tool_call.tool_name,toolCallId:e.client_tool_call.tool_call_id})});return Promise.resolve(n&&n.then?n.then(function(){}):void 0);case"audio":return r.handleAudio(e),Promise.resolve();case"vad_score":return r.handleVadScore(e),Promise.resolve();case"ping":return r.connection.sendMessage({type:"pong",event_id:e.ping_event.event_id}),Promise.resolve();case"mcp_tool_call":return r.handleMCPToolCall(e),Promise.resolve();case"mcp_connection_status":return r.handleMCPConnectionStatus(e),Promise.resolve();case"agent_tool_response":return r.handleAgentToolResponse(e),Promise.resolve();case"conversation_initiation_metadata":return r.handleConversationMetadata(e),Promise.resolve();case"asr_initiation_metadata":return r.handleAsrInitiationMetadata(e),Promise.resolve();default:return r.options.onDebug&&r.options.onDebug(e),Promise.resolve()}}catch(e){return Promise.reject(e)}},this.setVolume=function(e){t.volume=e.volume},this.options=e,this.connection=n,this.options.onConnect&&this.options.onConnect({conversationId:n.conversationId}),this.connection.onMessage(this.onMessage),this.connection.onDisconnect(this.endSessionWithDetails),this.connection.onModeChange(function(e){return t.updateMode(e)}),this.updateStatus("connected")}e.getFullOptions=function(e){return i({clientTools:{},onConnect:function(){},onDebug:function(){},onDisconnect:function(){},onError:function(){},onMessage:function(){},onAudio:function(){},onModeChange:function(){},onStatusChange:function(){},onCanSendFeedbackChange:function(){},onInterruption:function(){}},e)};var n=e.prototype;return n.endSession=function(){return this.endSessionWithDetails({reason:"user"})},n.handleEndSession=function(){try{return this.connection.close(),Promise.resolve()}catch(e){return Promise.reject(e)}},n.updateMode=function(e){e!==this.mode&&(this.mode=e,this.options.onModeChange&&this.options.onModeChange({mode:e}))},n.updateStatus=function(e){e!==this.status&&(this.status=e,this.options.onStatusChange&&this.options.onStatusChange({status:e}))},n.updateCanSendFeedback=function(){var e=this.currentEventId!==this.lastFeedbackEventId;this.canSendFeedback!==e&&(this.canSendFeedback=e,this.options.onCanSendFeedbackChange&&this.options.onCanSendFeedbackChange({canSendFeedback:e}))},n.handleInterruption=function(e){e.interruption_event&&(this.lastInterruptTimestamp=e.interruption_event.event_id,this.options.onInterruption&&this.options.onInterruption({event_id:e.interruption_event.event_id}))},n.handleAgentResponse=function(e){this.options.onMessage&&this.options.onMessage({source:"ai",message:e.agent_response_event.agent_response})},n.handleUserTranscript=function(e){this.options.onMessage&&this.options.onMessage({source:"user",message:e.user_transcription_event.user_transcript})},n.handleTentativeAgentResponse=function(e){this.options.onDebug&&this.options.onDebug({type:"tentative_agent_response",response:e.tentative_agent_response_internal_event.tentative_agent_response})},n.handleVadScore=function(e){this.options.onVadScore&&this.options.onVadScore({vadScore:e.vad_score_event.vad_score})},n.handleClientToolCall=function(e){try{var n=this;return Promise.resolve(function(){if(Object.prototype.hasOwnProperty.call(n.options.clientTools,e.client_tool_call.tool_name)){var t=u(function(){return Promise.resolve(n.options.clientTools[e.client_tool_call.tool_name](e.client_tool_call.parameters)).then(function(t){var o="object"==typeof t?JSON.stringify(t):String(t);n.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:o,is_error:!1})})},function(t){n.onError("Client tool execution failed with following error: "+(null==t?void 0:t.message),{clientToolName:e.client_tool_call.tool_name}),n.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:"Client tool execution failed: "+(null==t?void 0:t.message),is_error:!0})});if(t&&t.then)return t.then(function(){})}else{if(n.options.onUnhandledClientToolCall)return void n.options.onUnhandledClientToolCall(e.client_tool_call);n.onError("Client tool with name "+e.client_tool_call.tool_name+" is not defined on client",{clientToolName:e.client_tool_call.tool_name}),n.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:"Client tool with name "+e.client_tool_call.tool_name+" is not defined on client",is_error:!0})}}())}catch(e){return Promise.reject(e)}},n.handleAudio=function(e){},n.handleMCPToolCall=function(e){this.options.onMCPToolCall&&this.options.onMCPToolCall(e.mcp_tool_call)},n.handleMCPConnectionStatus=function(e){this.options.onMCPConnectionStatus&&this.options.onMCPConnectionStatus(e.mcp_connection_status)},n.handleAgentToolResponse=function(e){this.options.onAgentToolResponse&&this.options.onAgentToolResponse(e.agent_tool_response)},n.handleConversationMetadata=function(e){this.options.onConversationMetadata&&this.options.onConversationMetadata(e.conversation_initiation_metadata_event)},n.handleAsrInitiationMetadata=function(e){this.options.onAsrInitiationMetadata&&this.options.onAsrInitiationMetadata(e.asr_initiation_metadata_event)},n.onError=function(e,n){console.error(e,n),this.options.onError&&this.options.onError(e,n)},n.getId=function(){return this.connection.conversationId},n.isOpen=function(){return"connected"===this.status},n.setMicMuted=function(e){this.connection.setMicMuted(e)},n.getInputByteFrequencyData=function(){return c},n.getOutputByteFrequencyData=function(){return c},n.getInputVolume=function(){return 0},n.getOutputVolume=function(){return 0},n.sendFeedback=function(e){this.canSendFeedback?(this.connection.sendMessage({type:"feedback",score:e?"like":"dislike",event_id:this.currentEventId}),this.lastFeedbackEventId=this.currentEventId,this.updateCanSendFeedback()):console.warn(0===this.lastFeedbackEventId?"Cannot send feedback: the conversation has not started yet.":"Cannot send feedback: feedback has already been sent for the current response.")},n.sendContextualUpdate=function(e){this.connection.sendMessage({type:"contextual_update",text:e})},n.sendUserMessage=function(e){this.connection.sendMessage({type:"user_message",text:e})},n.sendUserActivity=function(){this.connection.sendMessage({type:"user_activity"})},n.sendMCPToolApprovalResult=function(e,n){this.connection.sendMessage({type:"mcp_tool_approval_result",tool_call_id:e,is_approved:n})},e}(),d=/*#__PURE__*/function(){function e(e){void 0===e&&(e={}),this.queue=[],this.disconnectionDetails=null,this.onDisconnectCallback=null,this.onMessageCallback=null,this.onModeChangeCallback=null,this.onDebug=void 0,this.onDebug=e.onDebug}var n=e.prototype;return n.debug=function(e){this.onDebug&&this.onDebug(e)},n.onMessage=function(e){this.onMessageCallback=e;var n=this.queue;this.queue=[],n.length>0&&queueMicrotask(function(){n.forEach(e)})},n.onDisconnect=function(e){this.onDisconnectCallback=e;var n=this.disconnectionDetails;n&&queueMicrotask(function(){e(n)})},n.onModeChange=function(e){this.onModeChangeCallback=e},n.updateMode=function(e){var n;null==(n=this.onModeChangeCallback)||n.call(this,e)},n.disconnect=function(e){var n;this.disconnectionDetails||(this.disconnectionDetails=e,null==(n=this.onDisconnectCallback)||n.call(this,e))},n.handleMessage=function(e){this.onMessageCallback?this.onMessageCallback(e):this.queue.push(e)},e}();function h(e){var n=e.split("_"),t=n[0],o=n[1];if(!["pcm","ulaw"].includes(t))throw new Error("Invalid format: "+e);var r=Number.parseInt(o);if(Number.isNaN(r))throw new Error("Invalid sample rate: "+o);return{format:t,sampleRate:r}}var p="0.7.1";function f(e){return!!e.type}var v="conversation_initiation_client_data";function m(e){var n,t,o,r,i,a,s={type:v};return e.overrides&&(s.conversation_config_override={agent:{prompt:null==(t=e.overrides.agent)?void 0:t.prompt,first_message:null==(o=e.overrides.agent)?void 0:o.firstMessage,language:null==(r=e.overrides.agent)?void 0:r.language},tts:{voice_id:null==(i=e.overrides.tts)?void 0:i.voiceId},conversation:{text_only:null==(a=e.overrides.conversation)?void 0:a.textOnly}}),e.customLlmExtraBody&&(s.custom_llm_extra_body=e.customLlmExtraBody),e.dynamicVariables&&(s.dynamic_variables=e.dynamicVariables),e.userId&&(s.user_id=e.userId),null!=(n=e.overrides)&&n.client&&(s.source_info={source:e.overrides.client.source,version:e.overrides.client.version}),s}var g=/*#__PURE__*/function(e){function n(n,t,o,r){var i;return(i=e.call(this)||this).socket=void 0,i.conversationId=void 0,i.inputFormat=void 0,i.outputFormat=void 0,i.socket=n,i.conversationId=t,i.inputFormat=o,i.outputFormat=r,i.socket.addEventListener("error",function(e){setTimeout(function(){return i.disconnect({reason:"error",message:"The connection was closed due to a socket error.",context:e})},0)}),i.socket.addEventListener("close",function(e){i.disconnect(1e3===e.code?{reason:"agent",context:e}:{reason:"error",message:e.reason||"The connection was closed by the server.",context:e})}),i.socket.addEventListener("message",function(e){try{var n=JSON.parse(e.data);if(!f(n))return void i.debug({type:"invalid_event",message:"Received invalid socket event",data:e.data});i.handleMessage(n)}catch(n){i.debug({type:"parsing_error",message:"Failed to parse socket message",error:n instanceof Error?n.message:String(n),data:e.data})}}),i}a(n,e),n.create=function(e){try{var t=null;return Promise.resolve(function(o,r){try{var i=function(){var o,r,i,a,s=null!=(o=e.origin)?o:"wss://api.elevenlabs.io",u=(null==(r=e.overrides)||null==(r=r.client)?void 0:r.version)||p,c=(null==(i=e.overrides)||null==(i=i.client)?void 0:i.source)||"js_sdk";if(e.signedUrl){var l=e.signedUrl.includes("?")?"&":"?";a=""+e.signedUrl+l+"source="+c+"&version="+u}else a=s+"/v1/convai/conversation?agent_id="+e.agentId+"&source="+c+"&version="+u;var d=["convai"];return e.authorization&&d.push("bearer."+e.authorization),t=new WebSocket(a,d),Promise.resolve(new Promise(function(n,o){t.addEventListener("open",function(){var n,o=m(e);null==(n=t)||n.send(JSON.stringify(o))},{once:!0}),t.addEventListener("error",function(e){setTimeout(function(){return o(e)},0)}),t.addEventListener("close",o),t.addEventListener("message",function(e){var t=JSON.parse(e.data);f(t)&&("conversation_initiation_metadata"===t.type?n(t.conversation_initiation_metadata_event):console.warn("First received message is not conversation metadata."))},{once:!0})})).then(function(e){var o=e.conversation_id,r=e.agent_output_audio_format,i=e.user_input_audio_format,a=h(null!=i?i:"pcm_16000"),s=h(r);return new n(t,o,a,s)})}()}catch(e){return r(e)}return i&&i.then?i.then(void 0,r):i}(0,function(e){var n;throw null==(n=t)||n.close(),e}))}catch(e){return Promise.reject(e)}};var t=n.prototype;return t.close=function(){this.socket.close()},t.sendMessage=function(e){this.socket.send(JSON.stringify(e))},t.setMicMuted=function(e){try{return console.warn("WebSocket connection setMicMuted called with "+e+", but this is handled by VoiceConversation"),Promise.resolve()}catch(e){return Promise.reject(e)}},n}(d);function y(e){var n=new Uint8Array(e);return window.btoa(String.fromCharCode.apply(String,n))}function P(e){for(var n=window.atob(e),t=n.length,o=new Uint8Array(t),r=0;r<t;r++)o[r]=n.charCodeAt(r);return o.buffer}function w(e,n){try{var t=e()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}var _=new Map;function b(e,n){return function(t,o){try{var r,i=function(o){var i;if(r)return o;function a(o){return i?o:w(function(){var o="data:application/javascript;base64,"+btoa(n);return Promise.resolve(t.addModule(o)).then(function(){_.set(e,o)})},function(){throw new Error("Failed to load the "+e+" worklet module. Make sure the browser supports AudioWorklets. If you are using a strict CSP, you may need to self-host the worklet files.")})}var s=new Blob([n],{type:"application/javascript"}),u=URL.createObjectURL(s),c=w(function(){return Promise.resolve(t.addModule(u)).then(function(){_.set(e,u),i=1})},function(){URL.revokeObjectURL(u)});return c&&c.then?c.then(a):a(c)},a=_.get(e);if(a)return Promise.resolve(t.addModule(a));var s=function(){if(o)return w(function(){return Promise.resolve(t.addModule(o)).then(function(){_.set(e,o),r=1})},function(n){throw new Error("Failed to load the "+e+" worklet module from path: "+o+". Error: "+n)})}();return Promise.resolve(s&&s.then?s.then(i):i(s))}catch(e){return Promise.reject(e)}}}var k=b("rawAudioProcessor",'/*\n * ulaw encoding logic taken from the wavefile library\n * https://github.com/rochars/wavefile/blob/master/lib/codecs/mulaw.js\n * USED BY @elevenlabs/client\n */\n\nconst BIAS = 0x84;\nconst CLIP = 32635;\nconst encodeTable = [\n  0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,\n  4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n  5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n  5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n  6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n  6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n  6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n  6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7\n];\n\nfunction encodeSample(sample) {\n  let sign;\n  let exponent;\n  let mantissa;\n  let muLawSample;\n  sign = (sample >> 8) & 0x80;\n  if (sign !== 0) sample = -sample;\n  sample = sample + BIAS;\n  if (sample > CLIP) sample = CLIP;\n  exponent = encodeTable[(sample>>7) & 0xFF];\n  mantissa = (sample >> (exponent+3)) & 0x0F;\n  muLawSample = ~(sign | (exponent << 4) | mantissa);\n  \n  return muLawSample;\n}\n\nclass RawAudioProcessor extends AudioWorkletProcessor {\n  constructor() {\n    super();\n              \n    this.port.onmessage = ({ data }) => {\n      switch (data.type) {\n        case "setFormat":\n          this.isMuted = false;\n          this.buffer = []; // Initialize an empty buffer\n          this.bufferSize = data.sampleRate / 4;\n          this.format = data.format;\n\n          if (globalThis.LibSampleRate && sampleRate !== data.sampleRate) {\n            globalThis.LibSampleRate.create(1, sampleRate, data.sampleRate).then(resampler => {\n              this.resampler = resampler;\n            });\n          }\n          break;\n        case "setMuted":\n          this.isMuted = data.isMuted;\n          break;\n      }\n    };\n  }\n  process(inputs) {\n    if (!this.buffer) {\n      return true;\n    }\n    \n    const input = inputs[0]; // Get the first input node\n    if (input.length > 0) {\n      let channelData = input[0]; // Get the first channel\'s data\n\n      // Resample the audio if necessary\n      if (this.resampler) {\n        channelData = this.resampler.full(channelData);\n      }\n\n      // Add channel data to the buffer\n      this.buffer.push(...channelData);\n      // Get max volume \n      let sum = 0.0;\n      for (let i = 0; i < channelData.length; i++) {\n        sum += channelData[i] * channelData[i];\n      }\n      const maxVolume = Math.sqrt(sum / channelData.length);\n      // Check if buffer size has reached or exceeded the threshold\n      if (this.buffer.length >= this.bufferSize) {\n        const float32Array = this.isMuted \n          ? new Float32Array(this.buffer.length)\n          : new Float32Array(this.buffer);\n\n        let encodedArray = this.format === "ulaw"\n          ? new Uint8Array(float32Array.length)\n          : new Int16Array(float32Array.length);\n\n        // Iterate through the Float32Array and convert each sample to PCM16\n        for (let i = 0; i < float32Array.length; i++) {\n          // Clamp the value to the range [-1, 1]\n          let sample = Math.max(-1, Math.min(1, float32Array[i]));\n\n          // Scale the sample to the range [-32768, 32767]\n          let value = sample < 0 ? sample * 32768 : sample * 32767;\n          if (this.format === "ulaw") {\n            value = encodeSample(Math.round(value));\n          }\n\n          encodedArray[i] = value;\n        }\n\n        // Send the buffered data to the main script\n        this.port.postMessage([encodedArray, maxVolume]);\n\n        // Clear the buffer after sending\n        this.buffer = [];\n      }\n    }\n    return true; // Continue processing\n  }\n}\nregisterProcessor("rawAudioProcessor", RawAudioProcessor);\n');function C(e,n){try{var t=e()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}var S=/*#__PURE__*/function(i){function s(e,n,t,o,r){var a;return void 0===r&&(r={}),(a=i.call(this,r)||this).conversationId=void 0,a.inputFormat=void 0,a.outputFormat=void 0,a.room=void 0,a.isConnected=!1,a.audioEventId=1,a.audioCaptureContext=null,a.audioElements=[],a.outputDeviceId=null,a.outputAnalyser=null,a.outputFrequencyData=null,a.room=e,a.conversationId=n,a.inputFormat=t,a.outputFormat=o,a.setupRoomEventListeners(),a}a(s,i),s.create=function(t){try{var o,r=function(r){var i=new e;return C(function(){var e="room_"+Date.now(),r=h("pcm_48000"),a=h("pcm_48000"),u=new s(i,e,r,a,t);return Promise.resolve(i.connect(t.livekitUrl||"wss://livekit.rtc.elevenlabs.io",o)).then(function(){return Promise.resolve(new Promise(function(e){if(u.isConnected)e();else{var t=function(){i.off(n.Connected,t),e()};i.on(n.Connected,t)}})).then(function(){var e;return i.name&&(u.conversationId=(null==(e=i.name.match(/(conv_[a-zA-Z0-9]+)/))?void 0:e[0])||i.name),Promise.resolve(i.localParticipant.setMicrophoneEnabled(!0)).then(function(){var e=m(t);return u.debug({type:v,message:e}),Promise.resolve(u.sendMessage(e)).then(function(){return u})})})})},function(e){return Promise.resolve(i.disconnect()).then(function(){throw e})})},i=function(){if(!("conversationToken"in t)||!t.conversationToken)return function(){if("agentId"in t&&t.agentId)return C(function(){var e,n,r,i=(null==(e=t.overrides)||null==(e=e.client)?void 0:e.version)||p,a=(null==(n=t.overrides)||null==(n=n.client)?void 0:n.source)||"js_sdk",s=function(e){return e.replace(/^wss:\/\//,"https://")}(null!=(r=t.origin)?r:"https://api.elevenlabs.io");return Promise.resolve(fetch(s+"/v1/convai/conversation/token?agent_id="+t.agentId+"&source="+a+"&version="+i)).then(function(e){if(!e.ok)throw new Error("ElevenLabs API returned "+e.status+" "+e.statusText);return Promise.resolve(e.json()).then(function(e){if(!(o=e.token))throw new Error("No conversation token received from API")})})},function(e){var n=e instanceof Error?e.message:String(e);throw e instanceof Error&&e.message.includes("401")&&(n="Your agent has authentication enabled, but no signed URL or conversation token was provided."),new Error("Failed to fetch conversation token for agent "+t.agentId+": "+n)});throw new Error("Either conversationToken or agentId is required for WebRTC connection")}();o=t.conversationToken}();return Promise.resolve(i&&i.then?i.then(r):r())}catch(e){return Promise.reject(e)}};var u=s.prototype;return u.setupRoomEventListeners=function(){var e=this,r=this,i=this,a=this;this.room.on(n.Connected,function(){try{return r.isConnected=!0,console.info("WebRTC room connected"),Promise.resolve()}catch(e){return Promise.reject(e)}}),this.room.on(n.Disconnected,function(n){e.isConnected=!1,e.disconnect({reason:"agent",context:new CloseEvent("close",{reason:null==n?void 0:n.toString()})})}),this.room.on(n.ConnectionStateChanged,function(n){n===t.Disconnected&&(e.isConnected=!1,e.disconnect({reason:"error",message:"LiveKit connection state changed to "+n,context:new Event("connection_state_changed")}))}),this.room.on(n.DataReceived,function(n,t){try{var o=JSON.parse((new TextDecoder).decode(n));if("audio"===o.type)return;f(o)?e.handleMessage(o):console.warn("Invalid socket event received:",o)}catch(e){console.warn("Failed to parse incoming data message:",e),console.warn("Raw payload:",(new TextDecoder).decode(n))}}),this.room.on(n.TrackSubscribed,function(e,n,t){try{var r=function(){if(e.kind===o.Kind.Audio&&t.identity.includes("agent")){var n=function(){return a.style.display="none",document.body.appendChild(a),i.audioElements.push(a),1===i.audioElements.length&&(null==i.onDebug||i.onDebug({type:"audio_element_ready"})),Promise.resolve(i.setupAudioCapture(r)).then(function(){})},r=e,a=r.attach();a.autoplay=!0,a.controls=!1;var s=function(){if(i.outputDeviceId&&a.setSinkId){var e=C(function(){return Promise.resolve(a.setSinkId(i.outputDeviceId)).then(function(){})},function(e){console.warn("Failed to set output device for new audio element:",e)});if(e&&e.then)return e.then(function(){})}}();return s&&s.then?s.then(n):n()}}();return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}),this.room.on(n.ActiveSpeakersChanged,function(e){try{return a.updateMode(e.length>0&&e[0].identity.startsWith("agent")?"speaking":"listening"),Promise.resolve()}catch(e){return Promise.reject(e)}})},u.close=function(){if(this.isConnected){try{this.room.localParticipant.audioTrackPublications.forEach(function(e){e.track&&e.track.stop()})}catch(e){console.warn("Error stopping local tracks:",e)}this.audioCaptureContext&&(this.audioCaptureContext.close().catch(function(e){console.warn("Error closing audio capture context:",e)}),this.audioCaptureContext=null),this.audioElements.forEach(function(e){e.parentNode&&e.parentNode.removeChild(e)}),this.audioElements=[],this.room.disconnect()}},u.sendMessage=function(e){try{var n=this;if(!n.isConnected||!n.room.localParticipant)return console.warn("Cannot send message: room not connected or no local participant"),Promise.resolve();if("user_audio_chunk"in e)return Promise.resolve();var t=C(function(){var t=(new TextEncoder).encode(JSON.stringify(e));return Promise.resolve(n.room.localParticipant.publishData(t,{reliable:!0})).then(function(){})},function(t){n.debug({type:"send_message_error",message:{message:e,error:t}}),console.error("Failed to send message via WebRTC:",t)});return Promise.resolve(t&&t.then?t.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},u.getRoom=function(){return this.room},u.setMicMuted=function(e){try{var n=this;if(!n.isConnected||!n.room.localParticipant)return console.warn("Cannot set microphone muted: room not connected or no local participant"),Promise.resolve();var t=n.room.localParticipant.getTrackPublication(o.Source.Microphone);return Promise.resolve(null!=t&&t.track?C(function(){var n=e?Promise.resolve(t.track.mute()).then(function(){}):Promise.resolve(t.track.unmute()).then(function(){});if(n&&n.then)return n.then(function(){})},function(){return Promise.resolve(n.room.localParticipant.setMicrophoneEnabled(!e)).then(function(){})}):Promise.resolve(n.room.localParticipant.setMicrophoneEnabled(!e)).then(function(){}))}catch(e){return Promise.reject(e)}},u.setupAudioCapture=function(e){try{var n=this,t=C(function(){var t=new AudioContext;n.audioCaptureContext=t,n.outputAnalyser=t.createAnalyser(),n.outputAnalyser.fftSize=2048,n.outputAnalyser.smoothingTimeConstant=.8;var o=new MediaStream([e.mediaStreamTrack]),r=t.createMediaStreamSource(o);return r.connect(n.outputAnalyser),Promise.resolve(k(t.audioWorklet)).then(function(){var e=new AudioWorkletNode(t,"rawAudioProcessor");n.outputAnalyser.connect(e),e.port.postMessage({type:"setFormat",format:n.outputFormat.format,sampleRate:n.outputFormat.sampleRate}),e.port.onmessage=function(e){var t=e.data;if(t[1]>.01){var o=y(t[0].buffer),r=n.audioEventId++;n.handleMessage({type:"audio",audio_event:{audio_base_64:o,event_id:r}})}},r.connect(e)})},function(e){console.warn("Failed to set up audio capture:",e)});return Promise.resolve(t&&t.then?t.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},u.setAudioVolume=function(e){this.audioElements.forEach(function(n){n.volume=e})},u.setAudioOutputDevice=function(e){try{var n=this;if(!("setSinkId"in HTMLAudioElement.prototype))throw new Error("setSinkId is not supported in this browser");var t=n.audioElements.map(function(n){try{return Promise.resolve(C(function(){return Promise.resolve(n.setSinkId(e)).then(function(){})},function(e){throw console.error("Failed to set sink ID for audio element:",e),e}))}catch(e){return Promise.reject(e)}});return Promise.resolve(Promise.all(t)).then(function(){n.outputDeviceId=e})}catch(e){return Promise.reject(e)}},u.setAudioInputDevice=function(e){try{var n=this;if(!n.isConnected||!n.room.localParticipant)throw new Error("Cannot change input device: room not connected or no local participant");return Promise.resolve(C(function(){function t(){return Promise.resolve(r({deviceId:{exact:e},echoCancellation:!0,noiseSuppression:!0,autoGainControl:!0,channelCount:{ideal:1}})).then(function(e){return Promise.resolve(n.room.localParticipant.publishTrack(e,{name:"microphone",source:o.Source.Microphone})).then(function(){})})}var i=n.room.localParticipant.getTrackPublication(o.Source.Microphone),a=function(){if(null!=i&&i.track)return Promise.resolve(i.track.stop()).then(function(){return Promise.resolve(n.room.localParticipant.unpublishTrack(i.track)).then(function(){})})}();return a&&a.then?a.then(t):t()},function(e){function t(){throw e}console.error("Failed to change input device:",e);var o=C(function(){return Promise.resolve(n.room.localParticipant.setMicrophoneEnabled(!0)).then(function(){})},function(e){console.error("Failed to recover microphone after device switch error:",e)});return o&&o.then?o.then(t):t()}))}catch(e){return Promise.reject(e)}},u.getOutputByteFrequencyData=function(){return this.outputAnalyser?(null!=this.outputFrequencyData||(this.outputFrequencyData=new Uint8Array(this.outputAnalyser.frequencyBinCount)),this.outputAnalyser.getByteFrequencyData(this.outputFrequencyData),this.outputFrequencyData):null},s}(d),M=function(e){try{var n=function(e){return e.connectionType?e.connectionType:"conversationToken"in e&&e.conversationToken?"webrtc":"websocket"}(e);switch(n){case"websocket":return Promise.resolve(g.create(e));case"webrtc":return Promise.resolve(S.create(e));default:throw new Error("Unknown connection type: "+n)}}catch(e){return Promise.reject(e)}};function I(){return["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document}var D=function(e){void 0===e&&(e={default:0,android:3e3});try{var n,t=e.default;if(/android/i.test(navigator.userAgent))t=null!=(n=e.android)?n:t;else if(I()){var o;t=null!=(o=e.ios)?o:t}var r=function(){if(t>0)return Promise.resolve(new Promise(function(e){return setTimeout(e,t)})).then(function(){})}();return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},F=/*#__PURE__*/function(e){function n(){return e.apply(this,arguments)||this}return a(n,e),n.startSession=function(e){try{var t=l.getFullOptions(e);t.onStatusChange&&t.onStatusChange({status:"connecting"}),t.onCanSendFeedbackChange&&t.onCanSendFeedbackChange({canSendFeedback:!1}),t.onModeChange&&t.onModeChange({mode:"listening"}),t.onCanSendFeedbackChange&&t.onCanSendFeedbackChange({canSendFeedback:!1});var o=null;return Promise.resolve(function(r,i){try{var a=Promise.resolve(D(t.connectionDelay)).then(function(){return Promise.resolve(M(e)).then(function(e){return new n(t,o=e)})})}catch(e){return i(e)}return a&&a.then?a.then(void 0,i):a}(0,function(e){var n;throw t.onStatusChange&&t.onStatusChange({status:"disconnected"}),null==(n=o)||n.close(),e}))}catch(e){return Promise.reject(e)}},n}(l);function A(e,n){try{var t=e()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}var E={echoCancellation:!0,noiseSuppression:!0,autoGainControl:!0,channelCount:{ideal:1}},T=/*#__PURE__*/function(){function e(e,n,t,o,r){this.context=void 0,this.analyser=void 0,this.worklet=void 0,this.inputStream=void 0,this.mediaStreamSource=void 0,this.context=e,this.analyser=n,this.worklet=t,this.inputStream=o,this.mediaStreamSource=r}e.create=function(n){var t=n.sampleRate,o=n.format,r=n.preferHeadphonesForIosDevices,a=n.inputDeviceId,s=n.workletPaths,u=n.libsampleratePath;try{var c=null,l=null;return Promise.resolve(A(function(){function n(){function n(){return Promise.resolve(k(c.audioWorklet,null==s?void 0:s.rawAudioProcessor)).then(function(){var n=i({voiceIsolation:!0},d);return Promise.resolve(navigator.mediaDevices.getUserMedia({audio:n})).then(function(n){var r=c.createMediaStreamSource(l=n),i=new AudioWorkletNode(c,"rawAudioProcessor");return i.port.postMessage({type:"setFormat",format:o,sampleRate:t}),r.connect(h),h.connect(i),Promise.resolve(c.resume()).then(function(){return new e(c,h,i,l,r)})})})}a&&(d.deviceId={exact:a});var r=navigator.mediaDevices.getSupportedConstraints().sampleRate,h=(c=new window.AudioContext(r?{sampleRate:t}:{})).createAnalyser(),p=function(){if(!r)return Promise.resolve(c.audioWorklet.addModule(u||"https://cdn.jsdelivr.net/npm/@alexanderolsen/libsamplerate-js@2.1.2/dist/libsamplerate.worklet.js")).then(function(){})}();return p&&p.then?p.then(n):n()}var d=i({sampleRate:{ideal:t}},E),h=function(){if(I()&&r)return Promise.resolve(window.navigator.mediaDevices.enumerateDevices()).then(function(e){var n=e.find(function(e){return"audioinput"===e.kind&&["airpod","headphone","earphone"].find(function(n){return e.label.toLowerCase().includes(n)})});n&&(d.deviceId={ideal:n.deviceId})})}();return h&&h.then?h.then(n):n()},function(e){var n,t;throw null==(n=l)||n.getTracks().forEach(function(e){e.stop()}),null==(t=c)||t.close(),e}))}catch(e){return Promise.reject(e)}};var n=e.prototype;return n.close=function(){try{var e=this;return e.inputStream.getTracks().forEach(function(e){e.stop()}),e.mediaStreamSource.disconnect(),Promise.resolve(e.context.close()).then(function(){})}catch(e){return Promise.reject(e)}},n.setMuted=function(e){this.worklet.port.postMessage({type:"setMuted",isMuted:e})},n.setInputDevice=function(e){try{var n=this;return Promise.resolve(A(function(){var t=i({},E);e&&(t.deviceId={exact:e});var o=i({voiceIsolation:!0},t);return Promise.resolve(navigator.mediaDevices.getUserMedia({audio:o})).then(function(e){n.inputStream.getTracks().forEach(function(e){e.stop()}),n.mediaStreamSource.disconnect(),n.inputStream=e,n.mediaStreamSource=n.context.createMediaStreamSource(e),n.mediaStreamSource.connect(n.analyser)})},function(e){throw console.error("Failed to switch input device:",e),e}))}catch(e){return Promise.reject(e)}},e}(),x=b("audioConcatProcessor",'/*\n * ulaw decoding logic taken from the wavefile library\n * https://github.com/rochars/wavefile/blob/master/lib/codecs/mulaw.js\n * USED BY @elevenlabs/client\n */\n\nconst decodeTable = [0,132,396,924,1980,4092,8316,16764];\n\nfunction decodeSample(muLawSample) {\n  let sign;\n  let exponent;\n  let mantissa;\n  let sample;\n  muLawSample = ~muLawSample;\n  sign = (muLawSample & 0x80);\n  exponent = (muLawSample >> 4) & 0x07;\n  mantissa = muLawSample & 0x0F;\n  sample = decodeTable[exponent] + (mantissa << (exponent+3));\n  if (sign !== 0) sample = -sample;\n\n  return sample;\n}\n\nclass AudioConcatProcessor extends AudioWorkletProcessor {\n  constructor() {\n    super();\n    this.buffers = []; // Initialize an empty buffer\n    this.cursor = 0;\n    this.currentBuffer = null;\n    this.wasInterrupted = false;\n    this.finished = false;\n    \n    this.port.onmessage = ({ data }) => {\n      switch (data.type) {\n        case "setFormat":\n          this.format = data.format;\n          break;\n        case "buffer":\n          this.wasInterrupted = false;\n          this.buffers.push(\n            this.format === "ulaw"\n              ? new Uint8Array(data.buffer)\n              : new Int16Array(data.buffer)\n          );\n          break;\n        case "interrupt":\n          this.wasInterrupted = true;\n          break;\n        case "clearInterrupted":\n          if (this.wasInterrupted) {\n            this.wasInterrupted = false;\n            this.buffers = [];\n            this.currentBuffer = null;\n          }\n      }\n    };\n  }\n  process(_, outputs) {\n    let finished = false;\n    const output = outputs[0][0];\n    for (let i = 0; i < output.length; i++) {\n      if (!this.currentBuffer) {\n        if (this.buffers.length === 0) {\n          finished = true;\n          break;\n        }\n        this.currentBuffer = this.buffers.shift();\n        this.cursor = 0;\n      }\n\n      let value = this.currentBuffer[this.cursor];\n      if (this.format === "ulaw") {\n        value = decodeSample(value);\n      }\n      output[i] = value / 32768;\n      this.cursor++;\n\n      if (this.cursor >= this.currentBuffer.length) {\n        this.currentBuffer = null;\n      }\n    }\n\n    if (this.finished !== finished) {\n      this.finished = finished;\n      this.port.postMessage({ type: "process", finished });\n    }\n\n    return true; // Continue processing\n  }\n}\n\nregisterProcessor("audioConcatProcessor", AudioConcatProcessor);\n'),j=/*#__PURE__*/function(){function e(e,n,t,o,r){this.context=void 0,this.analyser=void 0,this.gain=void 0,this.worklet=void 0,this.audioElement=void 0,this.context=e,this.analyser=n,this.gain=t,this.worklet=o,this.audioElement=r}e.create=function(n){var t=n.sampleRate,o=n.format,r=n.outputDeviceId,i=n.workletPaths;try{var a=null,s=null;return Promise.resolve(function(n,u){try{var c=function(){var n=(a=new AudioContext({sampleRate:t})).createAnalyser(),u=a.createGain();(s=new Audio).src="",s.load(),s.autoplay=!0,s.style.display="none",document.body.appendChild(s);var c=a.createMediaStreamDestination();return s.srcObject=c.stream,u.connect(n),n.connect(c),Promise.resolve(x(a.audioWorklet,null==i?void 0:i.audioConcatProcessor)).then(function(){var t=new AudioWorkletNode(a,"audioConcatProcessor");return t.port.postMessage({type:"setFormat",format:o}),t.connect(u),Promise.resolve(a.resume()).then(function(){function o(){return new e(a,n,u,t,s)}var i=function(){if(r&&s.setSinkId)return Promise.resolve(s.setSinkId(r)).then(function(){})}();return i&&i.then?i.then(o):o()})})}()}catch(e){return u(e)}return c&&c.then?c.then(void 0,u):c}(0,function(e){var n,t;function o(){throw e}null!=(n=s)&&n.parentNode&&s.parentNode.removeChild(s),null==(t=s)||t.pause();var r=function(){if(a&&"closed"!==a.state)return Promise.resolve(a.close()).then(function(){})}();return r&&r.then?r.then(o):o()}))}catch(e){return Promise.reject(e)}};var n=e.prototype;return n.setOutputDevice=function(e){try{if(!("setSinkId"in HTMLAudioElement.prototype))throw new Error("setSinkId is not supported in this browser");return Promise.resolve(this.audioElement.setSinkId(e||"")).then(function(){})}catch(e){return Promise.reject(e)}},n.close=function(){try{var e=this;return e.audioElement.parentNode&&e.audioElement.parentNode.removeChild(e.audioElement),e.audioElement.pause(),Promise.resolve(e.context.close()).then(function(){})}catch(e){return Promise.reject(e)}},e}();function R(e,n){try{var t=e()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}var O=/*#__PURE__*/function(e){function n(n,t,o,r,i){var a;return(a=e.call(this,n,t)||this).input=void 0,a.output=void 0,a.wakeLock=void 0,a.inputFrequencyData=void 0,a.outputFrequencyData=void 0,a.onInputWorkletMessage=function(e){"connected"===a.status&&a.connection.sendMessage({user_audio_chunk:y(e.data[0].buffer)})},a.onOutputWorkletMessage=function(e){var n=e.data;"process"===n.type&&a.updateMode(n.finished?"listening":"speaking")},a.addAudioBase64Chunk=function(e){a.output.gain.gain.value=a.volume,a.output.worklet.port.postMessage({type:"clearInterrupted"}),a.output.worklet.port.postMessage({type:"buffer",buffer:P(e)})},a.fadeOutAudio=function(){a.updateMode("listening"),a.output.worklet.port.postMessage({type:"interrupt"}),a.output.gain.gain.exponentialRampToValueAtTime(1e-4,a.output.context.currentTime+2),setTimeout(function(){a.output.gain.gain.value=a.volume,a.output.worklet.port.postMessage({type:"clearInterrupted"})},2e3)},a.calculateVolume=function(e){if(0===e.length)return 0;for(var n=0,t=0;t<e.length;t++)n+=e[t]/255;return(n/=e.length)<0?0:n>1?1:n},a.setVolume=function(e){var n=e.volume,t=Number.isFinite(n)?Math.min(1,Math.max(0,n)):1;a.volume=t,a.connection instanceof S?a.connection.setAudioVolume(t):a.output.gain.gain.value=t},a.input=o,a.output=r,a.wakeLock=i,a.input.worklet.port.onmessage=a.onInputWorkletMessage,a.output.worklet.port.onmessage=a.onOutputWorkletMessage,a}a(n,e),n.startSession=function(e){try{var t=function(){return R(function(){return Promise.resolve(navigator.mediaDevices.getUserMedia({audio:!0})).then(function(t){return u=t,Promise.resolve(D(o.connectionDelay)).then(function(){return Promise.resolve(M(e)).then(function(t){return a=t,Promise.resolve(Promise.all([T.create(i({},a.inputFormat,{preferHeadphonesForIosDevices:e.preferHeadphonesForIosDevices,inputDeviceId:e.inputDeviceId,workletPaths:e.workletPaths,libsampleratePath:e.libsampleratePath})),j.create(i({},a.outputFormat,{outputDeviceId:e.outputDeviceId,workletPaths:e.workletPaths}))])).then(function(e){var t;return r=e[0],s=e[1],null==(t=u)||t.getTracks().forEach(function(e){e.stop()}),u=null,new n(o,a,r,s,c)})})})})},function(e){var n,t,i;return o.onStatusChange&&o.onStatusChange({status:"disconnected"}),null==(n=u)||n.getTracks().forEach(function(e){e.stop()}),null==(t=a)||t.close(),Promise.resolve(null==(i=r)?void 0:i.close()).then(function(){var n;return Promise.resolve(null==(n=s)?void 0:n.close()).then(function(){function n(){throw e}var t=R(function(){var e;return Promise.resolve(null==(e=c)?void 0:e.release()).then(function(){c=null})},function(){});return t&&t.then?t.then(n):n()})})})},o=l.getFullOptions(e);o.onStatusChange&&o.onStatusChange({status:"connecting"}),o.onCanSendFeedbackChange&&o.onCanSendFeedbackChange({canSendFeedback:!1});var r=null,a=null,s=null,u=null,c=null,d=function(n){if(null==(n=e.useWakeLock)||n){var t=R(function(){return Promise.resolve(navigator.wakeLock.request("screen")).then(function(e){c=e})},function(){});if(t&&t.then)return t.then(function(){})}}();return Promise.resolve(d&&d.then?d.then(t):t())}catch(e){return Promise.reject(e)}};var t=n.prototype;return t.handleEndSession=function(){try{var n=this;return Promise.resolve(e.prototype.handleEndSession.call(n)).then(function(){function e(){return Promise.resolve(n.input.close()).then(function(){return Promise.resolve(n.output.close()).then(function(){})})}var t=R(function(){var e;return Promise.resolve(null==(e=n.wakeLock)?void 0:e.release()).then(function(){n.wakeLock=null})},function(){});return t&&t.then?t.then(e):e()})}catch(e){return Promise.reject(e)}},t.handleInterruption=function(n){e.prototype.handleInterruption.call(this,n),this.fadeOutAudio()},t.handleAudio=function(e){var n,t;this.lastInterruptTimestamp<=e.audio_event.event_id&&(null==(n=(t=this.options).onAudio)||n.call(t,e.audio_event.audio_base_64),this.connection instanceof S||this.addAudioBase64Chunk(e.audio_event.audio_base_64),this.currentEventId=e.audio_event.event_id,this.updateCanSendFeedback(),this.updateMode("speaking"))},t.setMicMuted=function(e){this.connection instanceof S?this.connection.setMicMuted(e):this.input.setMuted(e)},t.getInputByteFrequencyData=function(){return null!=this.inputFrequencyData||(this.inputFrequencyData=new Uint8Array(this.input.analyser.frequencyBinCount)),this.input.analyser.getByteFrequencyData(this.inputFrequencyData),this.inputFrequencyData},t.getOutputByteFrequencyData=function(){return this.connection instanceof S?this.connection.getOutputByteFrequencyData()||new Uint8Array(1024):(null!=this.outputFrequencyData||(this.outputFrequencyData=new Uint8Array(this.output.analyser.frequencyBinCount)),this.output.analyser.getByteFrequencyData(this.outputFrequencyData),this.outputFrequencyData)},t.getInputVolume=function(){return this.calculateVolume(this.getInputByteFrequencyData())},t.getOutputVolume=function(){return this.calculateVolume(this.getOutputByteFrequencyData())},t.changeInputDevice=function(e){var n=e.sampleRate,t=e.format,o=e.preferHeadphonesForIosDevices,r=e.inputDeviceId;try{var i,a=this;return Promise.resolve(R(function(){function e(e){if(i)return e;function s(){return Promise.resolve(a.input.close()).then(function(){return Promise.resolve(T.create({sampleRate:null!=n?n:a.connection.inputFormat.sampleRate,format:null!=t?t:a.connection.inputFormat.format,preferHeadphonesForIosDevices:o,inputDeviceId:r,workletPaths:a.options.workletPaths,libsampleratePath:a.options.libsampleratePath})).then(function(e){return a.input=e,a.input.worklet.port.onmessage=a.onInputWorkletMessage,a.input})})}var u=function(){if(a.connection instanceof S)return Promise.resolve(a.connection.setAudioInputDevice(r||"")).then(function(){})}();return u&&u.then?u.then(s):s()}var s=function(){if(a.connection instanceof g)return R(function(){return Promise.resolve(a.input.setInputDevice(r)).then(function(){return i=1,a.input})},function(e){console.warn("Failed to change device on existing input, recreating:",e)})}();return s&&s.then?s.then(e):e(s)},function(e){throw console.error("Error changing input device",e),e}))}catch(e){return Promise.reject(e)}},t.changeOutputDevice=function(e){var n=e.sampleRate,t=e.format,o=e.outputDeviceId;try{var r,i=this;return Promise.resolve(R(function(){function e(e){if(r)return e;function a(){return Promise.resolve(i.output.close()).then(function(){return Promise.resolve(j.create({sampleRate:null!=n?n:i.connection.outputFormat.sampleRate,format:null!=t?t:i.connection.outputFormat.format,outputDeviceId:o,workletPaths:i.options.workletPaths})).then(function(e){return i.output=e,i.output})})}var s=function(){if(i.connection instanceof S)return Promise.resolve(i.connection.setAudioOutputDevice(o||"")).then(function(){})}();return s&&s.then?s.then(a):a()}var a=function(){if(i.connection instanceof g)return R(function(){return Promise.resolve(i.output.setOutputDevice(o)).then(function(){return r=1,i.output})},function(e){console.warn("Failed to change device on existing output, recreating:",e)})}();return a&&a.then?a.then(e):e(a)},function(e){throw console.error("Error changing output device",e),e}))}catch(e){return Promise.reject(e)}},n}(l);function L(e,n,t){return void 0===t&&(t="https://api.elevenlabs.io"),fetch(t+"/v1/convai/conversations/"+e+"/feedback",{method:"POST",body:JSON.stringify({feedback:n?"like":"dislike"}),headers:{"Content-Type":"application/json"}})}var q=/*#__PURE__*/function(e){function n(){return e.apply(this,arguments)||this}return a(n,e),n.startSession=function(e){return e.textOnly?F.startSession(e):O.startSession(e)},n}(l);export{q as Conversation,T as Input,j as Output,F as TextConversation,O as VoiceConversation,S as WebRTCConnection,g as WebSocketConnection,M as createConnection,L as postOverallFeedback};
//# sourceMappingURL=lib.module.js.map
